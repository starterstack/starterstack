AWSTemplateFormatVersion: 2010-09-09
Transform:
  - AWS::LanguageExtensions
  - AWS::Serverless-2016-10-31

Description: Region

Parameters:
  Stack:
    Type: String
  LogRetentionInDays:
    Type: String
  AccountRegion:
    Type: String
  AccountPerStage:
    Type: String
  CaptureUserLanguageAndDeviceValue:
    Type: String
Metadata:
  expand:
    plugins:
      - '../git.mjs'
      - '../hash.mjs'
      - '../stack-stage-config.mjs'
      - '@starterstack/sam-expand/plugins/parameter-overrides'
    config:
      stackStageConfig:
        regions: account
        suffixStage: false
        stage: global
        addMappings: true
      parameterOverrides:
        - location: ../stack-stage-config.mjs
          overrides:
            - name: AccountRegion
              exportName: accountRegion
            - name: AccountPerStage
              exportName: accountPerStage
            - name: LogRetentionInDays
              exportName: logRetentionInDays
        - location: ../settings.json
          overrides:
            - name: CaptureUserLanguageAndDeviceValue
              exportName: captureUserLanguageAndDevice

Conditions:
  IsStackRegion: !Or
    - !Equals
      - !Ref AccountPerStage
      - 'false'
    - !Equals
      - !Sub ${AWS::Region}
      - !Ref AccountRegion
  CaptureUserLanguageAndDevice: !Equals
    - !Ref CaptureUserLanguageAndDeviceValue
    - true

Resources:
  LogResourcePolicy:
    Type: AWS::Logs::ResourcePolicy
    Properties:
      PolicyName: !Sub '${AWS::StackName}-log-resource-policy'
      PolicyDocument:
        Fn::ToJsonString:
          Version: '2012-10-17'
          Statement:
            - Sid: 'LogDeliveryWrite'
              Effect: 'Allow'
              Principal:
                Service: 'delivery.logs.amazonaws.com'
              Action:
                - 'logs:CreateLogStream'
                - 'logs:PutLogEvents'
              Resource:
                - !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/apigateway/http-api/${Stack}-cdn-*:log-stream:*'
                - !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:aws-waf-logs*${Stack}*:log-stream:*'
                - !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/vendedlogs/states/${Stack}*:log-stream:*'
              Condition:
                StringEquals:
                  'aws:SourceAccount': !Sub '${AWS::AccountId}'
                ArnLike:
                  'aws:SourceArn': !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:*'
  ApiGatewayWelcomeLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: IsStackRegion
    Properties:
      LogGroupName: '/aws/apigateway/welcome'
      RetentionInDays: !Ref LogRetentionInDays
      Tags:
        - Key: 'Name'
          Value: !Sub '${AWS::StackName} api gateway welcome log group'
        - Key: 'ManagedBy'
          Value: !Ref Stack

  StaticCachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Condition: IsStackRegion
    Properties:
      CachePolicyConfig:
        Comment: !Sub 'Created by SAM by ${AWS::StackName}'
        DefaultTTL: 0
        Name: !Sub '${AWS::StackName}Static'
        MinTTL: 0
        MaxTTL: 31536000
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: none
          QueryStringsConfig:
            QueryStringBehavior: none
          EnableAcceptEncodingBrotli: true
          EnableAcceptEncodingGzip: true
          HeadersConfig:
            HeaderBehavior: none

  QueryCachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Condition: IsStackRegion
    Properties:
      CachePolicyConfig:
        Comment: !Sub 'Created by SAM by ${AWS::StackName}'
        DefaultTTL: 0
        Name: !Sub '${AWS::StackName}Query'
        MinTTL: 0
        MaxTTL: 31536000
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: 'whitelist'
            Cookies:
              - token
          QueryStringsConfig:
            QueryStringBehavior: whitelist
            QueryStrings:
              - token
          EnableAcceptEncodingBrotli: true
          EnableAcceptEncodingGzip: true
          HeadersConfig:
            HeaderBehavior: 'whitelist'
            Headers:
              - range
              - x-api

  BasicOriginRequestPolicy:
    Type: AWS::CloudFront::OriginRequestPolicy
    Condition: IsStackRegion
    Properties:
      OriginRequestPolicyConfig:
        Comment: !Sub 'Created by SAM by ${AWS::StackName}'
        Name: !Sub '${AWS::StackName}BasicOriginRequestPolicy'
        CookiesConfig:
          CookieBehavior: 'whitelist'
          Cookies:
            - token
        QueryStringsConfig:
          QueryStringBehavior: 'all'
        HeadersConfig:
          HeaderBehavior: 'whitelist'
          Headers:
            Fn::If:
              - CaptureUserLanguageAndDevice
              - - content-type
                - accept
                - user-agent
                - range
                - CloudFront-Viewer-Country-Name
                - CloudFront-Is-Tablet-Viewer
                - CloudFront-Is-Mobile-Viewer
                - CloudFront-Is-Desktop-Viewer
              - - content-type
                - accept
                - user-agent
                - range
                - CloudFront-Is-Tablet-Viewer
                - CloudFront-Is-Mobile-Viewer
                - CloudFront-Is-Desktop-Viewer

  WebSocketOriginRequestPolicy:
    Type: AWS::CloudFront::OriginRequestPolicy
    Condition: IsStackRegion
    Properties:
      OriginRequestPolicyConfig:
        Comment: !Sub 'Created by SAM by ${AWS::StackName}'
        Name: !Sub '${AWS::StackName}WebSocketOriginRequestPolicy'
        CookiesConfig:
          CookieBehavior: whitelist
          Cookies:
            - token
        QueryStringsConfig:
          QueryStringBehavior: none
        HeadersConfig:
          HeaderBehavior: whitelist
          Headers:
            Fn::If:
              - CaptureUserLanguageAndDevice
              - - user-agent
                - Sec-WebSocket-Key
                - Sec-WebSocket-Version
                - Sec-WebSocket-Protocol
                - Sec-WebSocket-Accept
                - CloudFront-Viewer-Country-Name
                - CloudFront-Is-Tablet-Viewer
                - CloudFront-Is-Mobile-Viewer
                - CloudFront-Is-Desktop-Viewer
                - x-url
              - - user-agent
                - Sec-WebSocket-Key
                - Sec-WebSocket-Version
                - Sec-WebSocket-Protocol
                - Sec-WebSocket-Accept
                - CloudFront-Is-Tablet-Viewer
                - CloudFront-Is-Mobile-Viewer
                - CloudFront-Is-Desktop-Viewer
                - x-url

  CloudFrontResponseHeaderPolicy:
    Type: AWS::CloudFront::ResponseHeadersPolicy
    Condition: IsStackRegion
    Properties:
      ResponseHeadersPolicyConfig:
        Comment: !Sub 'Created by SAM by ${AWS::StackName}'
        Name: !Sub '${AWS::StackName}-default-headers-policy'
        CustomHeadersConfig:
          Items:
            - Header: X-Dns-Prefetch-Control
              Value: off
              Override: false
            - Header: X-Download-Options
              Value: noopen
              Override: false
            - Header: X-Permitted-Cross-Domain-Policies
              Value: none
              Override: false
            - Header: Cross-Origin-Opener-Policy
              Value: same-origin
              Override: false
            - Header: Cross-Origin-Resource-Policy
              Value: same-origin
              Override: false
            - Header: Server
              Value: ''
              Override: true
        SecurityHeadersConfig:
          ContentSecurityPolicy:
            ContentSecurityPolicy: >-
              base-uri 'self';
              object-src 'none';
              script-src 'self';
              style-src 'unsafe-inline' 'self' 'unsafe-eval';
              upgrade-insecure-requests;
              connect-src 'self';
              img-src 'self';
              manifest-src 'self';
              font-src 'self';
              media-src 'self';
              worker-src 'self';
              form-action 'self';
              frame-ancestors 'self';
              child-src 'none';
              default-src 'none'
            Override: false
          ContentTypeOptions:
            Override: false
          FrameOptions:
            FrameOption: DENY
            Override: false
          ReferrerPolicy:
            ReferrerPolicy: no-referrer
            Override: false
          StrictTransportSecurity:
            AccessControlMaxAgeSec: 15768000
            IncludeSubdomains: true
            Preload: true
            Override: false
          XSSProtection:
            ModeBlock: true
            Protection: true
            Override: false
        ServerTimingHeadersConfig:
          Enabled: true
          SamplingRate: !FindInMap
            - AWSAccounts
            - !Ref 'AWS::AccountId'
            - cloudfrontServerTiming
            - DefaultValue: 0

Outputs:
  StaticCachePolicy:
    Condition: IsStackRegion
    Description: CloudFront static cache policy for static resources
    Value: !Ref StaticCachePolicy
    Export:
      Name: !Sub '${AWS::StackName}StaticCachePolicy'
  QueryCachePolicy:
    Condition: IsStackRegion
    Description: CloudFront query cache policy for api
    Value: !Ref QueryCachePolicy
    Export:
      Name: !Sub '${AWS::StackName}QueryCachePolicy'
  BasicOriginRequestPolicy:
    Condition: IsStackRegion
    Description: CloudFront basic origin request policy
    Value: !Ref BasicOriginRequestPolicy
    Export:
      Name: !Sub '${AWS::StackName}BasicOriginRequestPolicy'
  WebSocketOriginRequestPolicy:
    Condition: IsStackRegion
    Description: CloudFront websocket origin request policy
    Value: !Ref WebSocketOriginRequestPolicy
    Export:
      Name: !Sub '${AWS::StackName}WebSocketOriginRequestPolicy'
  CloudFrontResponseHeaderPolicy:
    Condition: IsStackRegion
    Description: CloudFront header response policy
    Value: !Ref CloudFrontResponseHeaderPolicy
    Export:
      Name: !Sub '${AWS::StackName}CloudFrontResponseHeaderPolicy'
