name: release-please

on:
  push:
    branches:
      - main
  workflow_dispatch:
    branches:
      - main

concurrency:
  group: release-please
  cancel-in-progress: false

jobs:
  release-please:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
    steps:
      - id: release
        name: release
        uses: googleapis/release-please-action@v4
        with:
          config-file: .github/release-please-config.json
          manifest-file: .github/.release-please-manifest.json
      - uses: actions/checkout@v4
      - name: get previous version
        id: previous-version
        if: ${{ steps.release.outputs.pr && !contains(fromJSON(steps.release.outputs.pr).labels, 'release:next') }}
        run: |
          declare -r version=$(
          git ls-remote --tags \
            origin |
            awk '{print $2}' |
            sed 's|refs/tags/||g' |
            sort -V |
            tail -1
          )
          if [[ -n "${version:-}" ]]; then
            echo "result=${version:?}" >> "${GITHUB_OUTPUT:?}"
          fi
      - uses: actions/github-script@v7
        name: prepare pull request
        if: ${{ steps.release.outputs.pr && !contains(fromJSON(steps.release.outputs.pr).labels, 'release:next') }}
        with:
          script: |
            const previousVersion='${{ steps.previous-version.outputs.result }}'
            const diff = previousVersion
            ? `\n\nSee full diff in [compare view](https://github.com/starterstack/starterstack/compare/${previousVersion}...main)`
            : ''
            const issueNumber = Number('${{ fromJSON(steps.release.outputs.pr).number }}')
            return await Promise.all([
              (await import('${{ github.workspace }}/.github/actions/dist/add-pr-label.js')).default({
                github,
                context,
                issueNumber,
                label: 'release:next'
              }),
              (await import('${{ github.workspace }}/.github/actions/dist/create-pr-comment.js')).default({
                github,
                context,
                issueNumber,
                body: `⚡ These are the changes that will be released when this pull request is merged. ⚡${diff}`
              })
            ])
  deploy:
    needs: [release-please]
    if: ${{ needs.release-please.outputs.release_created }}
    uses: 'starterstack/starterstack/.github/workflows/main.yml@main'
    secrets: 'inherit'
    with:
      account: 'production'
      stage: 'prod'
      sha: ${{ github.sha }}
